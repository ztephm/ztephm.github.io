import type { EndpointBuilder } from '../domain/configuration';
import type { RawError } from '../tools/error';
/**
 * Use POST request without content type to:
 * - avoid CORS preflight requests
 * - allow usage of sendBeacon
 *
 * multiple elements are sent separated by \n in order
 * to be parsed correctly without content type header
 */
export declare type HttpRequest = ReturnType<typeof createHttpRequest>;
export interface HttpResponse {
    status: number;
}
export interface Payload {
    data: string | FormData;
    bytesCount: number;
}
export declare function createHttpRequest(endpointBuilder: EndpointBuilder, bytesLimit: number, reportError: (error: RawError) => void, toPrimaryEndpoint: boolean): {
    send: (payload: Payload) => void;
    /**
     * Since fetch keepalive behaves like regular fetch on Firefox,
     * keep using sendBeaconStrategy on exit
     */
    sendOnExit: (payload: Payload) => void;
};
export declare function fetchKeepAliveStrategy(endpointBuilder: EndpointBuilder, bytesLimit: number, { data, bytesCount }: Payload, onResponse?: (r: HttpResponse) => void): void;
